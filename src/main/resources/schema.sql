-- ==== DROP old tables in reverse-dependency order ====

DROP TABLE IF EXISTS EVALUACION_CRITERIO;
DROP TABLE IF EXISTS EVALUACIONES;
DROP TABLE IF EXISTS NIVELES_DESEMPENO;
DROP TABLE IF EXISTS CRITERIOS;
DROP TABLE IF EXISTS RUBRICAS;
DROP TABLE IF EXISTS RESULTADOS_ASIGNATURA;
DROP TABLE IF EXISTS ASIGNATURA_RAP;
DROP TABLE IF EXISTS ASIGNATURA_COMPETENCIA;
DROP TABLE IF EXISTS ASIGNATURAS;
DROP TABLE IF EXISTS RESULTADOS_PROGRAMA;
DROP TABLE IF EXISTS COMPETENCIAS_PROGRAMA;
DROP TABLE IF EXISTS DOCENTE;
DROP TABLE IF EXISTS USUARIOS;

-- SECURITY USERS table (for authentication)
CREATE TABLE USUARIOS
(
    ID                      INT AUTO_INCREMENT PRIMARY KEY,
    USERNAME                VARCHAR(50)  NOT NULL UNIQUE,
    PASSWORD_HASH           VARCHAR(255) NOT NULL,
    ROL                     VARCHAR(20)  NOT NULL,
    ENABLED                 BOOLEAN      NOT NULL DEFAULT TRUE,
    ACCOUNT_NON_EXPIRED     BOOLEAN      NOT NULL DEFAULT TRUE,
    ACCOUNT_NON_LOCKED      BOOLEAN      NOT NULL DEFAULT TRUE,
    CREDENTIALS_NON_EXPIRED BOOLEAN      NOT NULL DEFAULT TRUE
);
CREATE INDEX IDX_USUARIOS_USERNAME ON USUARIOS (USERNAME);
CREATE INDEX IDX_USUARIOS_ROL ON USUARIOS (ROL);

-- APPLICATION USERS table (renamed to avoid collision)
CREATE TABLE DOCENTE
(
    ID                  INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE              VARCHAR(100)        NOT NULL,
    APELLIDO            VARCHAR(100)        NOT NULL,
    CORREO_ACADEMICO    VARCHAR(150) UNIQUE NOT NULL,
    TIPO_IDENTIFICACION VARCHAR(20),
    IDENTIFICACION      VARCHAR(50) UNIQUE  NOT NULL,
    TIPO_DOCENTE        ENUM ('CATEDRA', 'TIEMPO_COMPLETO', 'PLANTA') DEFAULT NULL,
    TITULO_ACADEMICO    VARCHAR(100),
    ACTIVO              BOOLEAN                                       DEFAULT TRUE,
    USUARIO_ID          INT UNIQUE,
    FOREIGN KEY (USUARIO_ID) REFERENCES USUARIOS (ID)
);

-- PROGRAM COMPETENCIES
CREATE TABLE COMPETENCIAS_PROGRAMA
(
    ID          INT AUTO_INCREMENT PRIMARY KEY,
    CODIGO      VARCHAR(20) UNIQUE                        NOT NULL,
    DESCRIPCION TEXT                                      NOT NULL,
    NIVEL       ENUM ('BASICO', 'INTERMEDIO', 'AVANZADO') NOT NULL
);

-- PROGRAM LEARNING OUTCOMES (RAP)
CREATE TABLE RESULTADOS_PROGRAMA
(
    ID             INT AUTO_INCREMENT PRIMARY KEY,
    CODIGO         VARCHAR(20) UNIQUE NOT NULL,
    DESCRIPCION    TEXT               NOT NULL,
    ID_COMPETENCIA INT,
    FOREIGN KEY (ID_COMPETENCIA) REFERENCES COMPETENCIAS_PROGRAMA (ID)
);

-- SUBJECTS
CREATE TABLE ASIGNATURAS
(
    ID          INT AUTO_INCREMENT PRIMARY KEY,
    CODIGO      VARCHAR(20) UNIQUE NOT NULL,
    NOMBRE      VARCHAR(100)       NOT NULL,
    DESCRIPCION TEXT,
    CREDITOS    INT,
    SEMESTRE    INT,
    ACTIVA      BOOLEAN DEFAULT TRUE
);

-- ASSIGN COMPETENCIES & RAPS TO SUBJECTS
CREATE TABLE ASIGNATURA_COMPETENCIA
(
    ID_ASIGNATURA  INT,
    ID_COMPETENCIA INT,
    PRIMARY KEY (ID_ASIGNATURA, ID_COMPETENCIA),
    FOREIGN KEY (ID_ASIGNATURA) REFERENCES ASIGNATURAS (ID),
    FOREIGN KEY (ID_COMPETENCIA) REFERENCES COMPETENCIAS_PROGRAMA (ID)
);

CREATE TABLE ASIGNATURA_RAP
(
    ID_ASIGNATURA INT,
    ID_RAP        INT,
    PRIMARY KEY (ID_ASIGNATURA, ID_RAP),
    FOREIGN KEY (ID_ASIGNATURA) REFERENCES ASIGNATURAS (ID),
    FOREIGN KEY (ID_RAP) REFERENCES RESULTADOS_PROGRAMA (ID)
);

-- LEARNING OUTCOMES PER SUBJECT
CREATE TABLE RESULTADOS_ASIGNATURA
(
    ID            INT AUTO_INCREMENT PRIMARY KEY,
    DESCRIPCION   TEXT NOT NULL,
    ID_ASIGNATURA INT  NOT NULL,
    FOREIGN KEY (ID_ASIGNATURA) REFERENCES ASIGNATURAS (ID)
);


-- RUBRICS (simplified without foreign key to resultados_asignatura)
CREATE TABLE RUBRICAS
(
    ID             INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE         VARCHAR(100) NOT NULL,
    DESCRIPCION    VARCHAR(500) NOT NULL,
    FECHA_CREACION TIMESTAMP   DEFAULT CURRENT_TIMESTAMP,
    ESTADO         VARCHAR(20) DEFAULT 'ACTIVO'
);
CREATE INDEX IDX_RUBRICAS_ESTADO ON RUBRICAS (ESTADO);

-- EVALUATION CRITERIA PER RUBRIC
CREATE TABLE CRITERIOS
(
    ID          INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE      VARCHAR(100)  NOT NULL,
    DESCRIPCION VARCHAR(500)  NOT NULL,
    PESO        DECIMAL(5, 2) NOT NULL,
    RUBRICA_ID  INT           NOT NULL,
    FOREIGN KEY (RUBRICA_ID) REFERENCES RUBRICAS (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_CRITERIOS_RUBRICA ON CRITERIOS (RUBRICA_ID);

-- PERFORMANCE LEVELS PER CRITERION
CREATE TABLE NIVELES_DESEMPENO
(
    ID          INT AUTO_INCREMENT PRIMARY KEY,
    DESCRIPCION VARCHAR(500)  NOT NULL,
    PUNTAJE     DECIMAL(5, 2) NOT NULL,
    CRITERIO_ID INT           NOT NULL,
    FOREIGN KEY (CRITERIO_ID) REFERENCES CRITERIOS (ID) ON DELETE CASCADE
);
CREATE INDEX IDX_NIVELES_CRITERIO ON NIVELES_DESEMPENO (CRITERIO_ID);

-- EVALUATIONS
CREATE TABLE EVALUACIONES
(
    ID            INT AUTO_INCREMENT PRIMARY KEY,
    ID_ESTUDIANTE INT NOT NULL,
    ID_RUBRICA    INT NOT NULL,
    ID_EVALUADOR  INT NOT NULL,
    FECHA         DATE    DEFAULT CURRENT_DATE,
    COMENTARIOS   TEXT,
    FINALIZADA    BOOLEAN DEFAULT FALSE,
    FOREIGN KEY (ID_ESTUDIANTE) REFERENCES DOCENTE (ID),
    FOREIGN KEY (ID_RUBRICA) REFERENCES RUBRICAS (ID),
    FOREIGN KEY (ID_EVALUADOR) REFERENCES DOCENTE (ID)
);

-- CRITERION RESULTS IN AN EVALUATION
CREATE TABLE EVALUACION_CRITERIO
(
    ID                 INT AUTO_INCREMENT PRIMARY KEY,
    ID_EVALUACION      INT NOT NULL,
    ID_CRITERIO        INT NOT NULL,
    NIVEL_SELECCIONADO VARCHAR(50),
    NOTA               DECIMAL(4, 2),
    FOREIGN KEY (ID_EVALUACION) REFERENCES EVALUACIONES (ID),
    FOREIGN KEY (ID_CRITERIO) REFERENCES CRITERIOS (ID)
);
