
-- ==== DROP old tables in reverse-dependency order ====

DROP TABLE IF EXISTS NIVELES_DESEMPENO;
DROP TABLE IF EXISTS CRITERIOS;
DROP TABLE IF EXISTS RUBRICAS;
DROP TABLE IF EXISTS DOCENTE;
DROP TABLE IF EXISTS USUARIOS;

-- SECURITY USERS table (for authentication)
CREATE TABLE USUARIOS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    USERNAME VARCHAR(50) NOT NULL UNIQUE,
    PASSWORD_HASH VARCHAR(255) NOT NULL,
    ROL VARCHAR(20) NOT NULL,
    ENABLED BOOLEAN NOT NULL DEFAULT TRUE,
    ACCOUNT_NON_EXPIRED BOOLEAN NOT NULL DEFAULT TRUE,
    ACCOUNT_NON_LOCKED BOOLEAN NOT NULL DEFAULT TRUE,
    CREDENTIALS_NON_EXPIRED BOOLEAN NOT NULL DEFAULT TRUE
);
CREATE INDEX IDX_USUARIOS_USERNAME ON USUARIOS(USERNAME);
CREATE INDEX IDX_USUARIOS_ROL ON USUARIOS(ROL);

-- RUBRICS (simplified without foreign key to resultados_asignatura)
CREATE TABLE RUBRICAS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(100) NOT NULL,
    DESCRIPCION VARCHAR(500) NOT NULL,
    FECHA_CREACION TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    ESTADO VARCHAR(20) DEFAULT 'ACTIVO'
);
CREATE INDEX IDX_RUBRICAS_ESTADO ON RUBRICAS(ESTADO);

-- EVALUATION CRITERIA PER RUBRIC
CREATE TABLE CRITERIOS (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NOMBRE VARCHAR(100) NOT NULL,
    DESCRIPCION VARCHAR(500) NOT NULL,
    PESO DECIMAL(5,2) NOT NULL,
    RUBRICA_ID INT NOT NULL,
    FOREIGN KEY (RUBRICA_ID) REFERENCES RUBRICAS(ID) ON DELETE CASCADE
);
CREATE INDEX IDX_CRITERIOS_RUBRICA ON CRITERIOS(RUBRICA_ID);

-- PERFORMANCE LEVELS PER CRITERION
CREATE TABLE NIVELES_DESEMPENO (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    DESCRIPCION VARCHAR(500) NOT NULL,
    PUNTAJE DECIMAL(5,2) NOT NULL,
    CRITERIO_ID INT NOT NULL,
    FOREIGN KEY (CRITERIO_ID) REFERENCES CRITERIOS(ID) ON DELETE CASCADE
);
CREATE INDEX IDX_NIVELES_CRITERIO ON NIVELES_DESEMPENO(CRITERIO_ID);
